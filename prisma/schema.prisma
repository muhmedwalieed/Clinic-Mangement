generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum USER_ROLES {
  OWNER
  ADMIN
  DOCTOR
  NURSE
}

model Users {
  id        String     @id @default(uuid())
  firstName String?
  lastName  String?
  username  String     @unique
  password  String
  isActive  Boolean    @default(true)
  profileCompleted Boolean @default(false)
  userRole  USER_ROLES

  adminId        String
  createdByAdmin Users?  @relation(name: "AdminCreatedNewUser", fields: [adminId], references: [id])
  createdUsers   Users[] @relation(name: "AdminCreatedNewUser")

  clinics               Clinics[] @relation(name: "DoctorOwner")
  clinicsCreatedByAdmin Clinics[] @relation(name: "AdminCreatedNewClinic")
}

model Clinics {
  id              String          @id @default(uuid())
  name            String
  consultationFee Float?
  followUpFee     Float?
  EXPIRATION_DAYS Int?
  doctorId        String
  doctorOwner     Users           @relation(name: "DoctorOwner", fields: [doctorId], references: [id])
  adminId         String
  createdByAdmin  Users           @relation(name: "AdminCreatedNewClinic", fields: [adminId], references: [id])
  consultations   Consultations[]
}

enum STATUS {
  pending
  completed
  cancelled
}
enum STATUSFOLLOWUP{
  valid
  expired
}


model Consultations {
  id          String   @id @default(uuid())
  price       Float
  status      STATUS   @default(pending)
  createdAt   DateTime @default(now())
  description String?

  followUp FollowUps? @relation("ConsultationFollowUp")
  followUpStatus STATUSFOLLOWUP @default(valid)

  patientId String
  patient   Patients @relation(fields: [patientId], references: [id])

  clinicId String
  clinic   Clinics @relation(fields: [clinicId], references: [id])

  @@unique([id, clinicId])
}

model FollowUps {
  id     String @id @default(uuid())
  price  Float
  status STATUS @default(pending)

  consultationId String        @unique
  consultation    Consultations @relation("ConsultationFollowUp", fields: [consultationId], references: [id])

  createdAt DateTime @default(now())
}

model Patients {
  id                     String          @id @default(uuid())
  firstName              String
  lastName               String
  phone                  String          @unique
  historyOfConsultations Consultations[]
}
